version: '3.8'

services:
  # Import external services from parent directory
  mongodb:
    extends:
      file: ../../docker-compose.yml
      service: mongodb
    container_name: embedding_mongodb
    networks:
      - common_network_embedding

  elasticsearch:
    extends:
      file: ../../docker-compose.yml
      service: elasticsearch
    container_name: embedding_elasticsearch
    networks:
      - common_network_embedding
      
  redis:
    extends:
      file: ../../docker-compose.yml
      service: redis
    container_name: embedding_redis
    networks:
      - common_network_embedding

  chromadb:
    extends:
      file: ../../docker-compose.yml
      service: chromadb
    container_name: embedding_chromadb
    networks:
      - common_network_embedding

  # Main embedding service
  embedding_service:
    ## Uncomment the build section if you want to build the image from a Dockerfile
    # build: 
    #   context: .
    #   dockerfile: Dockerfile
    container_name: embedding_rag_service
    image: embedding_service_image
    restart: always
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
      chromadb:
        condition: service_started
      elasticsearch:
        condition: service_healthy
    env_file:
      - ../../env/${PROFILE:-dev}.env
    environment:
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      
      
    volumes:
      - ../../app_data/file_uploads:/app_data/file_uploads:rw
      - ../../app_data/embedding_service/logs:/app_data/logs:rw
      - ../../app_data/embedding_service/model_cache:/root/.cache/huggingface:rw
      - ../../app_data/chroma_db:/app_data/chroma_db:rw
      - ../../services:/app:rw
    ports:
      - "${EMBEDDING_SERVICE_PORT:-8003}:8000"  # Optional health check endpoint
    
    networks:
      - common_network_embedding

    command: /usr/local/bin/python /app/embedding/server.py

    healthcheck:
      test: ["CMD", "sh", "-c", "grep -q SUCCESS /app_data/logs/embedding_service_status.txt"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    

# Common network for service communication
networks:
  common_network_embedding:
    driver: bridge